/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/cluster-api-provider-aws/pkg/cloud/services (interfaces: ELBClusterInterface)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockELBClusterInterface is a mock of ELBClusterInterface interface.
type MockELBClusterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockELBClusterInterfaceMockRecorder
}

// MockELBClusterInterfaceMockRecorder is the mock recorder for MockELBClusterInterface.
type MockELBClusterInterfaceMockRecorder struct {
	mock *MockELBClusterInterface
}

// NewMockELBClusterInterface creates a new mock instance.
func NewMockELBClusterInterface(ctrl *gomock.Controller) *MockELBClusterInterface {
	mock := &MockELBClusterInterface{ctrl: ctrl}
	mock.recorder = &MockELBClusterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockELBClusterInterface) EXPECT() *MockELBClusterInterfaceMockRecorder {
	return m.recorder
}

// DeleteLoadbalancers mocks base method.
func (m *MockELBClusterInterface) DeleteLoadbalancers() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLoadbalancers")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLoadbalancers indicates an expected call of DeleteLoadbalancers.
func (mr *MockELBClusterInterfaceMockRecorder) DeleteLoadbalancers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLoadbalancers", reflect.TypeOf((*MockELBClusterInterface)(nil).DeleteLoadbalancers))
}

// ReconcileLoadbalancers mocks base method.
func (m *MockELBClusterInterface) ReconcileLoadbalancers() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileLoadbalancers")
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileLoadbalancers indicates an expected call of ReconcileLoadbalancers.
func (mr *MockELBClusterInterfaceMockRecorder) ReconcileLoadbalancers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileLoadbalancers", reflect.TypeOf((*MockELBClusterInterface)(nil).ReconcileLoadbalancers))
}
